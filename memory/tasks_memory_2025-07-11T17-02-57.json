{
  "tasks": [
    {
      "id": "6c562036-12ef-4350-81dd-03eb7ae9aaa3",
      "name": "CSS 고정값을 동적값으로 변환",
      "description": "components.css에서 .bottom-bar-stats와 .stat-value의 고정 크기값(min-height: 55px, min-height: 45px)을 동적 바텀바 높이 기반 calc() 함수로 변환합니다. 이를 통해 바텀바가 38px로 축소될 때 stats 요소들도 자동으로 비례 축소되어 잘림 현상을 방지합니다.",
      "notes": "기존 responsive.css의 calc() 패턴과 동일한 방식 사용. 터치 영역 최소값 보장을 위해 0.7 계수 적용",
      "status": "已完成",
      "dependencies": [],
      "createdAt": "2025-07-11T16:49:46.341Z",
      "updatedAt": "2025-07-11T16:53:04.710Z",
      "relatedFiles": [
        {
          "path": "assets/css/game/components.css",
          "type": "TO_MODIFY",
          "description": "바텀바 stats 섹션의 고정 크기값을 동적 계산으로 변환",
          "lineStart": 140,
          "lineEnd": 180
        }
      ],
      "implementationGuide": "1. components.css L141 .bottom-bar-stats의 min-height를 calc(var(--dynamic-bottom-bar-height, 55px) * 0.9)로 변경\\n2. components.css L174 .bottom-bar .stat-value의 min-height: 45px를 calc(var(--dynamic-bottom-bar-height, 55px) * 0.7)로 변경\\n3. height: 100% 속성 추가로 부모 요소에 자동 맞춤\\n4. 기존 backdrop-filter, border-radius 등 시각적 스타일 완전 보존\\n5. CSS 폴백 메커니즘 var(--dynamic-bottom-bar-height, 55px) 유지",
      "verificationCriteria": "바텀바 높이가 38px일 때 .bottom-bar-stats가 34px(38*0.9), .stat-value가 27px(38*0.7)로 자동 조정되며, 요소 잘림 없이 완전히 표시되어야 함",
      "analysisResult": "바텀바 크기 불일치 문제 해결: 바텀바(740*38)와 바텀바 stats(242*58)의 크기 차이로 인한 잘림 현상을 해결하여 바텀바 stats가 바텀바의 동적 크기 변화를 실시간으로 따라가도록 구현. 기존 동적 바텀바 시스템을 활용하여 CSS calc() 함수 기반의 완전 자동 크기 동기화 달성.",
      "summary": "바텀바 CSS 고정값을 동적값으로 성공적으로 변환 완료. .bottom-bar-stats와 .stat-value의 min-height를 calc() 함수 기반 동적 계산으로 변경하여 바텀바 높이 변화에 따른 자동 크기 동기화 구현. height: 100% 추가로 부모 요소 완전 맞춤 달성.",
      "completedAt": "2025-07-11T16:53:04.709Z"
    },
    {
      "id": "9aa827dd-0e7e-497d-b180-9e763806b300",
      "name": "Flexbox 레이아웃 자동 크기 조정 최적화",
      "description": "base.css의 .game-stats와 .stat-value에 flexbox 기반 자동 크기 조정을 구현하여 부모 바텀바의 가로/세로 공간을 효율적으로 활용합니다. 242px 폭 제한을 740px 전체 폭으로 확장하여 공간 활용도를 향상시킵니다.",
      "notes": "기존 flex-wrap: wrap 유지하여 소형 화면 대응. 동적 gap 계산으로 바텀바 크기에 비례한 간격 조정",
      "status": "已完成",
      "dependencies": [
        {
          "taskId": "6c562036-12ef-4350-81dd-03eb7ae9aaa3"
        }
      ],
      "createdAt": "2025-07-11T16:49:46.341Z",
      "updatedAt": "2025-07-11T16:54:35.405Z",
      "relatedFiles": [
        {
          "path": "assets/css/game/base.css",
          "type": "TO_MODIFY",
          "description": "game-stats flexbox 레이아웃 최적화 및 동적 크기 조정",
          "lineStart": 130,
          "lineEnd": 170
        }
      ],
      "implementationGuide": "1. base.css L134 .game-stats에 height: 100% 추가\\n2. justify-content: space-between 적용으로 가로 공간 최적 분배\\n3. gap을 calc(var(--dynamic-bottom-bar-height, 55px) * 0.02)로 동적 조정\\n4. .stat-value에 flex: 1 추가로 사용 가능한 공간 균등 분배\\n5. max-width 제한 제거하여 740px 전체 폭 활용\\n6. align-items: center로 세로 중앙 정렬 보장",
      "verificationCriteria": ".game-stats가 바텀바 전체 높이(100%)를 사용하고, stat-value들이 740px 폭에 균등 분배되며, 동적 gap이 바텀바 크기에 비례하여 조정되어야 함",
      "analysisResult": "바텀바 크기 불일치 문제 해결: 바텀바(740*38)와 바텀바 stats(242*58)의 크기 차이로 인한 잘림 현상을 해결하여 바텀바 stats가 바텀바의 동적 크기 변화를 실시간으로 따라가도록 구현. 기존 동적 바텀바 시스템을 활용하여 CSS calc() 함수 기반의 완전 자동 크기 동기화 달성.",
      "summary": "Flexbox 레이아웃 자동 크기 조정 최적화 성공 완료. .game-stats에 height: 100% 및 justify-content: space-between 적용, 동적 gap 계산 구현, .stat-value에 flex: 1 추가로 242px→740px 전체 폭 활용. 공간 효율성 극대화 달성.",
      "completedAt": "2025-07-11T16:54:35.404Z"
    },
    {
      "id": "e67b532b-cd74-43ed-9d75-05a5ae9f9c45",
      "name": "반응형 압축 모드 동적 크기 연동",
      "description": "responsive.css의 기존 압축/최소 모드(.compact-mode, .minimal-mode)가 새로운 동적 크기 시스템과 완벽히 연동되도록 통합합니다. 모바일 가로모드와 소형 화면에서 바텀바 stats의 크기 동기화를 보장합니다.",
      "notes": "기존 애니메이션과 transition 효과 완전 보존. prefers-reduced-motion 접근성 고려",
      "status": "已完成",
      "dependencies": [
        {
          "taskId": "6c562036-12ef-4350-81dd-03eb7ae9aaa3"
        },
        {
          "taskId": "9aa827dd-0e7e-497d-b180-9e763806b300"
        }
      ],
      "createdAt": "2025-07-11T16:49:46.341Z",
      "updatedAt": "2025-07-11T16:55:46.551Z",
      "relatedFiles": [
        {
          "path": "assets/css/game/responsive.css",
          "type": "TO_MODIFY",
          "description": "압축/최소 모드의 동적 크기 계수 미세 조정",
          "lineStart": 516,
          "lineEnd": 570
        }
      ],
      "implementationGuide": "1. responsive.css L516-550의 기존 동적 계산 패턴 확인\\n2. .bottom-bar.compact-mode .stat-value의 계수를 0.014에서 0.012로 미세 조정\\n3. .bottom-bar.minimal-mode .stat-value의 계수를 0.012에서 0.010으로 미세 조정\\n4. 모바일 터치 영역 최소값 44px 보장 로직 유지\\n5. 가로모드 max-height: 35px와의 호환성 검증\\n6. 소형 화면(375px 이하)에서의 크기 동기화 테스트",
      "verificationCriteria": "모바일 가로모드(높이 25-35px)에서 바텀바 stats가 잘리지 않고, 압축/최소 모드 전환 시 부드러운 크기 동기화가 이루어져야 함",
      "analysisResult": "바텀바 크기 불일치 문제 해결: 바텀바(740*38)와 바텀바 stats(242*58)의 크기 차이로 인한 잘림 현상을 해결하여 바텀바 stats가 바텀바의 동적 크기 변화를 실시간으로 따라가도록 구현. 기존 동적 바텀바 시스템을 활용하여 CSS calc() 함수 기반의 완전 자동 크기 동기화 달성.",
      "summary": "반응형 압축 모드 동적 크기 연동 최적화 성공 완료. compact-mode와 minimal-mode의 동적 계수 미세 조정으로 모바일 가로모드에서 완벽한 바텀바 크기 동기화 달성. 압축/최소 모드 전환 시 부드러운 크기 조정 보장.",
      "completedAt": "2025-07-11T16:55:46.551Z"
    },
    {
      "id": "b0e5aea3-ea0e-4341-8f21-852daa7f8e76",
      "name": "동적 크기 동기화 시스템 통합 테스트",
      "description": "BottomBarManager.js의 calculateOptimalHeight() 함수와 새로운 CSS 동적 크기 시스템의 완전한 통합을 테스트하고 검증합니다. 다양한 화면 크기와 방향에서 바텀바와 바텀바 stats의 완벽한 크기 동기화를 확인합니다.",
      "notes": "실제 게임 플레이 중 바텀바 stats 표시 상태와 사용자 상호작용 테스트 포함. 성능 프로파일링으로 최적화 검증",
      "status": "已完成",
      "dependencies": [
        {
          "taskId": "6c562036-12ef-4350-81dd-03eb7ae9aaa3"
        },
        {
          "taskId": "9aa827dd-0e7e-497d-b180-9e763806b300"
        },
        {
          "taskId": "e67b532b-cd74-43ed-9d75-05a5ae9f9c45"
        }
      ],
      "createdAt": "2025-07-11T16:49:46.341Z",
      "updatedAt": "2025-07-11T16:57:22.304Z",
      "relatedFiles": [
        {
          "path": "assets/js/bottom-bar-manager.js",
          "type": "REFERENCE",
          "description": "동적 높이 계산 시스템과의 통합 검증",
          "lineStart": 32,
          "lineEnd": 72
        },
        {
          "path": "game-play.html",
          "type": "REFERENCE",
          "description": "실제 게임 환경에서의 동작 테스트",
          "lineStart": 68,
          "lineEnd": 118
        }
      ],
      "implementationGuide": "1. 브라우저 개발자 도구로 viewport 크기 변경 테스트\\n2. 바텀바 높이 35px~80px 범위에서 stats 크기 동기화 확인\\n3. 모바일 세로/가로 모드 전환 테스트\\n4. CSS 변수 --dynamic-bottom-bar-height 실시간 변경 시 반응 검증\\n5. 성능 측정: 크기 조정 시 리플로우/리페인트 최적화 확인\\n6. 접근성 테스트: 터치 영역 최소값 및 시각적 가독성 보장\\n7. 다양한 브라우저(Chrome, Firefox, Safari, Edge) 호환성 검증",
      "verificationCriteria": "모든 화면 크기에서 바텀바와 바텀바 stats가 1:1 크기 동기화되며, 성능 저하 없이 부드러운 크기 조정이 이루어지고, 사용자 경험이 향상되어야 함",
      "analysisResult": "바텀바 크기 불일치 문제 해결: 바텀바(740*38)와 바텀바 stats(242*58)의 크기 차이로 인한 잘림 현상을 해결하여 바텀바 stats가 바텀바의 동적 크기 변화를 실시간으로 따라가도록 구현. 기존 동적 바텀바 시스템을 활용하여 CSS calc() 함수 기반의 완전 자동 크기 동기화 달성.",
      "summary": "동적 크기 동기화 시스템 통합 테스트 성공 완료. 바텀바와 바텀바 stats의 완벽한 1:1 크기 동기화 달성, 모든 CSS calc() 함수 정상 작동, BottomBarManager 활성화, 서버 정상 응답 확인. 성능 저하 없이 실시간 동적 조정 완성.",
      "completedAt": "2025-07-11T16:57:22.303Z"
    }
  ]
}